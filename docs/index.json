[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/animation/FrameAnimation.js",
    "content": "// eslint-disable-next-line import/no-unresolved\nconst methodNameMatch = /(frame)(\\d+)(In|Out|)$/;\n\n/**\n *\n */\nexport default class FrameAnimation {\n  /**\n   * @return Array<{in: gsap.core.Timeline | null, base: gsap.core.Timeline | null, out: gsap.core.Timeline | null}>\n   * @private\n   */\n  __gatherAnimation() {\n    const scope = this;\n    let names = [];\n    let obj = this;\n    do {\n      names = names.concat(Object.getOwnPropertyNames(obj));\n    } while ((obj = Object.getPrototypeOf(obj)));\n\n    const data = [];\n    names.forEach(name => {\n      const result = methodNameMatch.exec(name);\n      if (result !== null) {\n        let [frameNumber, type] = result.splice(2);\n        frameNumber = parseInt(frameNumber, 10);\n        type = `${type}`.toLowerCase();\n\n        if (type === '') {\n          type = 'base';\n        }\n\n        const method = scope[name];\n\n        if (method) {\n          if (!data[frameNumber]) {\n            data[frameNumber] = {\n              in: null,\n              base: null,\n              out: null,\n            };\n          }\n\n          data[frameNumber][type] = method;\n        }\n      }\n    });\n\n    return data;\n  }\n\n  /**\n   * @return gsap.core.Timeline\n   * @private\n   */\n  __createTimeline(timeline = gsap.timeline()) {\n    const animationMethods = this.__gatherAnimation();\n\n    for (let i = 0; i < animationMethods.length; i++) {\n      if (animationMethods[i]) {\n        if (animationMethods[i].in) {\n          const subTimeline = animationMethods[i].in.call(this, timeline);\n          if (subTimeline) timeline.add(subTimeline);\n        }\n        if (animationMethods[i].base) {\n          const subTimeline = animationMethods[i].base.call(this, timeline);\n          if (subTimeline) timeline.add(subTimeline);\n        }\n        if (animationMethods[i].out) {\n          const subTimeline = animationMethods[i].out.call(this, timeline);\n          if (subTimeline) timeline.add(subTimeline);\n        }\n      }\n    }\n\n    return timeline;\n  }\n\n  /**\n   * Returns the concatinated timeline timeline\n   * @param timeline\n   * @return {gsap.core.Timeline}\n   */\n  getTimeline(timeline = gsap.timeline()) {\n    if (!this.__timeline) {\n      this.__timeline = this.__createTimeline(timeline);\n    }\n\n    return this.__timeline;\n  }\n\n  /**\n   *\n   * @param {gsap.core.Timeline} timeline\n   * @return {gsap.core.Timeline}\n   */\n  play(tl = gsap.timeline()) {\n    const timeline = this.getTimeline(tl);\n    timeline.play();\n  }\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/animation/FrameAnimation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "methodNameMatch",
    "memberof": "src/animation/FrameAnimation.js",
    "static": true,
    "longname": "src/animation/FrameAnimation.js~methodNameMatch",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/animation/FrameAnimation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "FrameAnimation",
    "memberof": "src/animation/FrameAnimation.js",
    "static": true,
    "longname": "src/animation/FrameAnimation.js~FrameAnimation",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/animation/FrameAnimation.js",
    "importStyle": "FrameAnimation",
    "description": "",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "__gatherAnimation",
    "memberof": "src/animation/FrameAnimation.js~FrameAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/FrameAnimation.js~FrameAnimation#__gatherAnimation",
    "access": "private",
    "description": "",
    "lineNumber": 12,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Array<{in: gsap.core.Timeline | null, base: gsap.core.Timeline | null, out: gsap.core.Timeline | null}>"
    },
    "params": []
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "__createTimeline",
    "memberof": "src/animation/FrameAnimation.js~FrameAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/FrameAnimation.js~FrameAnimation#__createTimeline",
    "access": "private",
    "description": "",
    "lineNumber": 55,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "gsap.core.Timeline"
    },
    "params": [
      {
        "name": "timeline",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "getTimeline",
    "memberof": "src/animation/FrameAnimation.js~FrameAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/FrameAnimation.js~FrameAnimation#getTimeline",
    "access": "public",
    "description": "Returns the concatinated timeline timeline",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "timeline",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "gsap.core.Timeline"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "__timeline",
    "memberof": "src/animation/FrameAnimation.js~FrameAnimation",
    "static": false,
    "longname": "src/animation/FrameAnimation.js~FrameAnimation#__timeline",
    "access": "private",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "play",
    "memberof": "src/animation/FrameAnimation.js~FrameAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/FrameAnimation.js~FrameAnimation#play",
    "access": "public",
    "description": "",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "gsap.core.Timeline"
        ],
        "spread": false,
        "optional": false,
        "name": "timeline",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "gsap.core.Timeline"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/doubleclick/Events.js",
    "content": "\nconst namespace = \"DoubleClick\";\n\nexport default {\n  INIT: `${namespace}.INIT`,\n  EXIT: `${namespace}.EXIT`,\n  VISIBLE: `${namespace}.VISIBLE`,\n  EXPAND_START: `${namespace}.EXPAND_START`,\n  EXPAND_FINISH: `${namespace}.EXPAND_FINISH`,\n  COLLAPSE: `${namespace}.COLLAPSE`,\n  COLLAPSE_START: `${namespace}.COLLAPSE_START`,\n  COLLAPSE_FINISH: `${namespace}.COLLAPSE_FINISH`,\n  FULLSCREEN_EXPAND_START: `${namespace}.FULLSCREEN_EXPAND_START`,\n  FULLSCREEN_EXPAND_FINISH: `${namespace}.FULLSCREEN_EXPAND_FINISH`,\n  FULLSCREEN_COLLAPSE_START: `${namespace}.FULLSCREEN_COLLAPSE_START`,\n  FULLSCREEN_COLLAPSE_FINISH: `${namespace}.FULLSCREEN_COLLAPSE_FINISH`,\n  HIDDEN: `${namespace}.HIDDEN`,\n  INTERACTION: `${namespace}.INTERACTION`,\n  ORIENTATION: `${namespace}.ORIENTATION`,\n  PAGE_LOADED: `${namespace}.PAGE_LOADED`,\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/doubleclick/Events.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "namespace",
    "memberof": "src/doubleclick/Events.js",
    "static": true,
    "longname": "src/doubleclick/Events.js~namespace",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/doubleclick/Events.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "src/doubleclick/addVideoTracking.js",
    "content": "\n/**\n *\n * @param {string} id\n * @param {HTMLVideoElement} videoElement\n */\nexport default function addVideoTracking(id, videoElement) {\n  if (!studio.video) {\n    Enabler.loadModule(studio.module.ModuleId.VIDEO, () => {\n      this.addVideoTracking(id, videoElement);\n    });\n    return;\n  }\n\n  studio.video.Reporter.attach(id, videoElement);\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/doubleclick/addVideoTracking.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "function",
    "name": "addVideoTracking",
    "memberof": "src/doubleclick/addVideoTracking.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/doubleclick/addVideoTracking.js~addVideoTracking",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/doubleclick/addVideoTracking.js",
    "importStyle": "addVideoTracking",
    "description": "",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLVideoElement"
        ],
        "spread": false,
        "optional": false,
        "name": "videoElement",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/doubleclick/getEventDispatcher.js",
    "content": "import getEnabler from '../util/getEnabler';\nimport EventDispatcher from '../event/EventDispatcher';\nimport Events from './Events';\n\nlet prom = null;\n\n/**\n *\n * @return {null}\n */\nexport default function getEventDispatcher(){\n  if(!prom){\n\n    const eventDispatcher = new EventDispatcher();\n\n    prom = getEnabler().then(Enabler => {\n      const se = studio.events.StudioEvent;\n\n      /**\n       * Dispatched when an exit is invoked.\n       */\n      Enabler.addEventListener(se.EXIT, () => eventDispatcher.dispatchEvent(Events.EXIT));\n\n      /**\n       * Dispatched when an interaction occurs.\n       */\n      Enabler.addEventListener(se.INTERACTION, () => eventDispatcher.dispatchEvent(Events.INTERACTION));\n\n      /**\n       * Dispatched when orientation and/or orientation degrees change.\n       */\n      Enabler.addEventListener(se.ORIENTATION, () => eventDispatcher.dispatchEvent(Events.ORIENTATION));\n      Enabler.addEventListener(se.PAGE_LOADED, () => eventDispatcher.dispatchEvent(Events.PAGE_LOADED));\n\n      /**\n       * Dispatched when the ad is hidden from the user. This is useful for environments where the\n       * ad is rendered offscreen and displayed to the user at a later time, then possibly hidden.\n       */\n      Enabler.addEventListener(se.HIDDEN, () => eventDispatcher.dispatchEvent(Events.HIDDEN));\n      Enabler.addEventListener(se.VISIBLE, () => eventDispatcher.dispatchEvent(Events.VISIBLE));\n\n      // expandable events\n      Enabler.addEventListener(se.COLLAPSE, () => eventDispatcher.dispatchEvent(Events.COLLAPSE));\n      Enabler.addEventListener(se.COLLAPSE_FINISH, () => eventDispatcher.dispatchEvent(Events.COLLAPSE_FINISH));\n      Enabler.addEventListener(se.COLLAPSE_START, () => eventDispatcher.dispatchEvent(Events.COLLAPSE_START));\n\n      /**\n       * Dispatched when the creative has begun expanding. This gets dispatched when a user calls\n       * studio.Enabler#requestExpand() or when the rendering environment has initiated expanding the creative.\n       */\n      Enabler.addEventListener(se.EXPAND_START, () => eventDispatcher.dispatchEvent(Events.EXPAND_START));\n\n      /**\n       * Dispatched when the creative has finished expanding.\n       */\n      Enabler.addEventListener(se.EXPAND_FINISH, () => eventDispatcher.dispatchEvent(Events.EXPAND_FINISH));\n\n      /**\n       * Dispatched when the creative should begin collapsing from fullscreen state to collapsed state.\n       */\n      Enabler.addEventListener(se.FULLSCREEN_COLLAPSE_START, () => eventDispatcher.dispatchEvent(Events.FULLSCREEN_COLLAPSE_START));\n\n      /**\n       * Dispatched when the creative has finished collapsing from fullscreen state to collapsed state.\n       */\n      Enabler.addEventListener(se.FULLSCREEN_COLLAPSE_FINISH, () => eventDispatcher.dispatchEvent(Events.FULLSCREEN_COLLAPSE_FINISH));\n\n      Enabler.addEventListener(se.FULLSCREEN_EXPAND_FINISH, () => eventDispatcher.dispatchEvent(Events.FULLSCREEN_EXPAND_FINISH));\n      Enabler.addEventListener(se.FULLSCREEN_EXPAND_START, () => eventDispatcher.dispatchEvent(Events.FULLSCREEN_EXPAND_START));\n    })\n\n    prom = prom.then(() => eventDispatcher);\n  }\n\n  return prom;\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/doubleclick/getEventDispatcher.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "prom",
    "memberof": "src/doubleclick/getEventDispatcher.js",
    "static": true,
    "longname": "src/doubleclick/getEventDispatcher.js~prom",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/doubleclick/getEventDispatcher.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "getEventDispatcher",
    "memberof": "src/doubleclick/getEventDispatcher.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/doubleclick/getEventDispatcher.js~getEventDispatcher",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/doubleclick/getEventDispatcher.js",
    "importStyle": "getEventDispatcher",
    "description": "",
    "lineNumber": 11,
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/doubleclick/queryFullscreenDimensions.js",
    "content": "import getEnabler from '../util/getEnabler';\n\nlet prom = null;\n\n/**\n * Indicates the maximum dimensions available to the creative for fullscreen expansion, as\n * well as the offset of the original creative.\n *\n * If width and height are zero, it means the ad cannot expand to fullscreen. (note that in these\n * circumstances, any studio.events.FULLSCREEN_SUPPORT events will have \"supported\" set to false).\n * If width and height are not present, it means display width and height cannot be determined in\n * the current ad rendering environment (for example, MRAID 1.0). If left and top are -1, it means\n * that the location of the ad could not be determined.\n *\n * @return {Promise<{width, height, top, left}>}\n */\nexport default function queryFullscreenDimensions() {\n  if (!prom)\n  {\n    prom = getEnabler().then(Enabler => {\n      return new Promise(resolve => {\n        const fn = data => {\n          Enabler.removeEventListener(studio.events.StudioEvent.FULLSCREEN_DIMENSIONS, fn);\n          resolve(data);\n        };\n        Enabler.addEventListener(studio.events.StudioEvent.FULLSCREEN_DIMENSIONS, fn);\n      });\n    })\n\n  }\n\n  return prom;\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/doubleclick/queryFullscreenDimensions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "prom",
    "memberof": "src/doubleclick/queryFullscreenDimensions.js",
    "static": true,
    "longname": "src/doubleclick/queryFullscreenDimensions.js~prom",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/doubleclick/queryFullscreenDimensions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "queryFullscreenDimensions",
    "memberof": "src/doubleclick/queryFullscreenDimensions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/doubleclick/queryFullscreenDimensions.js~queryFullscreenDimensions",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/doubleclick/queryFullscreenDimensions.js",
    "importStyle": "queryFullscreenDimensions",
    "description": "Indicates the maximum dimensions available to the creative for fullscreen expansion, as\nwell as the offset of the original creative.\n\nIf width and height are zero, it means the ad cannot expand to fullscreen. (note that in these\ncircumstances, any studio.events.FULLSCREEN_SUPPORT events will have \"supported\" set to false).\nIf width and height are not present, it means display width and height cannot be determined in\nthe current ad rendering environment (for example, MRAID 1.0). If left and top are -1, it means\nthat the location of the ad could not be determined.",
    "lineNumber": 17,
    "return": {
      "nullable": null,
      "types": [
        "Promise<{width, height, top, left}>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "src/doubleclick/queryFullscreenSupport.js",
    "content": "import getEnabler from '../util/getEnabler';\n\nlet prom = null;\n/**\n * inform the creative as to whether fullscreen is supported.\n *\n * @return {Promise<boolean>}\n */\nexport default function queryFullscreenSupport() {\n  if (!prom) {\n    prom = getEnabler().then(Enabler => {\n      return new Promise(resolve => {\n        const fn = data => {\n          Enabler.removeEventListener(studio.events.StudioEvent.FULLSCREEN_SUPPORT, fn);\n          resolve(data);\n        };\n        Enabler.addEventListener(studio.events.StudioEvent.FULLSCREEN_SUPPORT, fn);\n      });\n    });\n  }\n\n  return prom;\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/doubleclick/queryFullscreenSupport.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "prom",
    "memberof": "src/doubleclick/queryFullscreenSupport.js",
    "static": true,
    "longname": "src/doubleclick/queryFullscreenSupport.js~prom",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/doubleclick/queryFullscreenSupport.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "queryFullscreenSupport",
    "memberof": "src/doubleclick/queryFullscreenSupport.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/doubleclick/queryFullscreenSupport.js~queryFullscreenSupport",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/doubleclick/queryFullscreenSupport.js",
    "importStyle": "queryFullscreenSupport",
    "description": "inform the creative as to whether fullscreen is supported.",
    "lineNumber": 9,
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/doubleclick/untilEnablerIsInitialized.js",
    "content": "import loadScript from '../util/loadScript';\nimport getEnabler from '../util/getEnabler';\n\nexport default function untilEnablerIsInitialized() {\n\n  let prom = Promise.resolve();\n\n  if (!window.Enabler) {\n    prom = prom.then(() => loadScript('https://s0.2mdn.net/ads/studio/Enabler.js'));\n  }\n\n  prom = prom.then(() => getEnabler())\n\n  prom = prom.then(Enabler => {\n      return new Promise(resolve => {\n        if (!Enabler.isInitialized()) {\n          Enabler.addEventListener(studio.events.StudioEvent.INIT, resolve);\n        } else {\n          resolve();\n        }\n      });\n    });\n\n  return prom;\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/doubleclick/untilEnablerIsInitialized.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "untilEnablerIsInitialized",
    "memberof": "src/doubleclick/untilEnablerIsInitialized.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/doubleclick/untilEnablerIsInitialized.js~untilEnablerIsInitialized",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/doubleclick/untilEnablerIsInitialized.js",
    "importStyle": "untilEnablerIsInitialized",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/event/Disposable.js",
    "content": "/**\n *\n */\nexport default class Disposable {\n  /**\n   *\n   * @param {string} name\n   * @param {Function} func\n   * @param {EventDispatcher} dispatcher\n   */\n  constructor(name, func, dispatcher) {\n    this._name = name;\n    this._func = func;\n    this._dispatcher = dispatcher;\n  }\n\n  dispose() {\n    this._dispatcher.removeEventListener(this._name, this._func);\n    this._dispatcher = this._name = this._func = null;\n  }\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/event/Disposable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "class",
    "name": "Disposable",
    "memberof": "src/event/Disposable.js",
    "static": true,
    "longname": "src/event/Disposable.js~Disposable",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/event/Disposable.js",
    "importStyle": "Disposable",
    "description": "",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 73,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/event/Disposable.js~Disposable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Disposable.js~Disposable#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "EventDispatcher"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatcher",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "_name",
    "memberof": "src/event/Disposable.js~Disposable",
    "static": false,
    "longname": "src/event/Disposable.js~Disposable#_name",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "_func",
    "memberof": "src/event/Disposable.js~Disposable",
    "static": false,
    "longname": "src/event/Disposable.js~Disposable#_func",
    "access": "private",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "_dispatcher",
    "memberof": "src/event/Disposable.js~Disposable",
    "static": false,
    "longname": "src/event/Disposable.js~Disposable#_dispatcher",
    "access": "private",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/event/Disposable.js~Disposable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/Disposable.js~Disposable#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/event/EventDispatcher.js",
    "content": "/**\n *\n */\nimport Disposable from './Disposable';\n\nexport default class EventDispatcher {\n  _events = {};\n\n  /**\n   *\n   * @param {string} name\n   * @param {Array<any>>} args\n   */\n  dispatchEvent(name, ...args) {\n    if (this._events[name]) {\n      const events = this._events[name];\n      const { length } = events;\n      for (let i = 0; i < length; i += 1) {\n        const func = events[i];\n        func.apply(this, args);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {string} name\n   * @param {function} func\n   */\n  addEventListener(name, func) {\n    if (!this._events[name]) {\n      this._events[name] = [];\n    }\n\n    this._events[name].push(func);\n\n    return new Disposable(name, func, this);\n  }\n\n  /**\n   *\n   * @param {string} event\n   * @param {func} func\n   */\n  removeEventListener(event, func) {\n    if (!func || typeof func !== 'function') {\n      throw new Error('second argument is required and needs to be a function');\n    }\n\n    if (this._events[event]) {\n      this._events[event] = this._events[event].filter(value => value !== func);\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/event/EventDispatcher.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "class",
    "name": "EventDispatcher",
    "memberof": "src/event/EventDispatcher.js",
    "static": true,
    "longname": "src/event/EventDispatcher.js~EventDispatcher",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/event/EventDispatcher.js",
    "importStyle": "EventDispatcher",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "_events",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#_events",
    "access": "private",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "dispatchEvent",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#dispatchEvent",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<any>>"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "addEventListener",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#addEventListener",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "removeEventListener",
    "memberof": "src/event/EventDispatcher.js~EventDispatcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/event/EventDispatcher.js~EventDispatcher#removeEventListener",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "func"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/util/Browser.js",
    "content": "/**\n * @example\n * Browser.isMobile\n *\n * @type {{\n *  isMobile: boolean\n *  isOS: boolean\n *  isOS9up: boolean\n *  isPad: boolean\n *  isSafari: boolean\n *  isFirefox: boolean\n *  isChrome: boolean\n *  isEdge: boolean\n *  isOpera: boolean\n * }}\n *\n * @return {object}\n */\n\nconst userAgent = navigator.userAgent;\nlet Browser = {};\n\nBrowser.isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);\nBrowser.isOS = /iPad|iPhone|iPod/.test(userAgent);\nBrowser.isOS9up = Browser.isOS && navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/)[1] > 9;\nBrowser.isPad = /iPad/.test(userAgent);\nBrowser.isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nBrowser.isFirefox = /firefox|fxios/i.test(userAgent);\nBrowser.isChrome = /chrome|chromium|crios/i.test(userAgent);\nBrowser.isEdge = /edg/i.test(userAgent);\nBrowser.isOpera = /opr\\//i.test(userAgent);\n\nexport default Browser;\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/Browser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "userAgent",
    "memberof": "src/util/Browser.js",
    "static": true,
    "longname": "src/util/Browser.js~userAgent",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/Browser.js",
    "importStyle": null,
    "description": "",
    "examples": [
      "Browser.isMobile"
    ],
    "lineNumber": 20,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "nullable": null,
      "types": [
        "{\n isMobile: boolean\n isOS: boolean\n isOS9up: boolean\n isPad: boolean\n isSafari: boolean\n isFirefox: boolean\n isChrome: boolean\n isEdge: boolean\n isOpera: boolean\n}"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "Browser",
    "memberof": "src/util/Browser.js",
    "static": true,
    "longname": "src/util/Browser.js~Browser",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/Browser.js",
    "importStyle": "Browser",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "src/util/PhysicsSafeRaf.js",
    "content": "/**\n * @description\n *\n *   const raf = new Raf((time, diff) => {\n *     // do animation diff is the time difference between this frame and the previous frame\n *   }).start()\n *\n *   // stop animation.\n *   raf.stop();\n */\nexport default class PhysicsSafeRaf {\n  rafNum = -1;\n  currentTime = 0;\n\n  /**\n   *\n   * @param {Function} callback\n   * @param limitFps\n   */\n  constructor(callback, limitFps = -1) {\n    this.callback = callback;\n    this.limitFps = limitFps;\n\n    this.hasLimiter = limitFps > 0;\n    this.limitMsps = 1000 / limitFps;\n    this.timeAcc = this.limitMsps;\n  }\n\n  tick = timestamp => {\n    this.rafNum = window.requestAnimationFrame(this.tick);\n    const timeDiff = timestamp - this.currentTime;\n    this.currentTime = timestamp;\n\n    if (timeDiff > 0 && !this.hasLimiter) {\n      this.callback.call(null, timestamp, timeDiff);\n    } else if (timeDiff > 0) {\n      this.timeAcc += timeDiff;\n      while (this.timeAcc > this.limitMsps) {\n        this.timeAcc -= this.limitMsps;\n        this.callback.call(null, timestamp, this.limitMsps);\n      }\n    }\n  };\n\n  valueOf = () => this.rafNum;\n  start = () => {\n    if (this.rafNum === -1) {\n      this.tick();\n    }\n\n    return this;\n  };\n  stop = () => {\n    cancelAnimationFrame(this.rafNum);\n    this.rafNum = -1;\n\n    return this;\n  };\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/PhysicsSafeRaf.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "class",
    "name": "PhysicsSafeRaf",
    "memberof": "src/util/PhysicsSafeRaf.js",
    "static": true,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/PhysicsSafeRaf.js",
    "importStyle": "PhysicsSafeRaf",
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "\n  const raf = new Raf((time, diff) => {\n    // do animation diff is the time difference between this frame and the previous frame\n  }).start()\n\n  // stop animation.\n  raf.stop();"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "rafNum",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#rafNum",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "currentTime",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#currentTime",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "limitFps",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "callback",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#callback",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "limitFps",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#limitFps",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "hasLimiter",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#hasLimiter",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "limitMsps",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#limitMsps",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "timeAcc",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#timeAcc",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "tick",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#tick",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "valueOf",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#valueOf",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "start",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#start",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "stop",
    "memberof": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf",
    "static": false,
    "longname": "src/util/PhysicsSafeRaf.js~PhysicsSafeRaf#stop",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "src/util/createStyle.js",
    "content": "import getGlobalStyleSheet from './getGlobalStyleSheet';\n\n/**\n * Programmatically create a css style rule.\n *\n * @param {String} classSelector Class, ID or element selector.\n * @param {String} rules CSS rules.\n */\nexport default function createStyle(classSelector, rules) {\n  classSelector = classSelector !== 'banner' ? `#banner ${classSelector}` : classSelector;\n\n  const styleSheet = getGlobalStyleSheet();\n\n  if (styleSheet.sheet.insertRule) {\n    styleSheet.sheet.insertRule(`${classSelector}{${rules}}`, 0);\n  } else if (styleSheet.styleSheet) {\n    styleSheet.styleSheet.addRule(classSelector, rules);\n  } else if (styleSheet.sheet) {\n    styleSheet.sheet.addRule(classSelector, rules);\n  }\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/createStyle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "createStyle",
    "memberof": "src/util/createStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/createStyle.js~createStyle",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/createStyle.js",
    "importStyle": "createStyle",
    "description": "Programmatically create a css style rule.",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "classSelector",
        "description": "Class, ID or element selector."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "rules",
        "description": "CSS rules."
      }
    ],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/util/dataBind.js",
    "content": "import makeObservable from './makeObservable';\n\nfunction getObject(str) {\n  let [type, path] = str.split(':');\n\n  type = type.trim();\n  path = path.trim().split('.');\n\n  return {\n    type,\n    path,\n  };\n}\n\nfunction getValue(model, path) {\n  path.forEach(item => {\n    if (model.hasOwnProperty(item)) {\n      model = model[item];\n    }\n  });\n\n  if (typeof model !== 'string') {\n    throw new Error(`defined path is wrong ${path.join('.')}`);\n  }\n\n  return model;\n}\n\n/**\n *\n * @param {object} model\n * @param {HTMLElement} element\n * @param {boolean} isObservable\n *\n * @example\n * data-bind=\"html: text\" , applies html to a element from the property text.\n * data-bind=\"src: logo.Url\" , applies src to a element from the property logo.Url.\n * data-bind=\"href: logo.Url\" , applies href to a element from the property logo.Url.\n * data-bind=\"style.backgroundColor: bgcolor\" , applies style.backgroundColor to a element from the property bgcolor.\n */\nfunction dataBind(model, element, isObservable = false) {\n  const elements = element.querySelectorAll('[data-bind]');\n\n  if (isObservable) {\n    let { observable: model, dispatcher } = makeObservable(model);\n\n    elements.forEach(el => {\n      const data = getObject(el.getAttribute('data-bind'));\n\n      dispatcher.addEventListener(data.path.join('.'), () =>\n        updateElement(data.type, getValue(model, data.path), el),\n      );\n    });\n\n    return { model, dispatcher };\n  } else {\n    elements.forEach(el => {\n      const data = getObject(el.getAttribute('data-bind'));\n\n      updateElement(data.type, getValue(model, data.path), el);\n    });\n  }\n\n  return { model };\n}\n\nfunction updateElement(type, val, element) {\n  switch (type) {\n    case 'text': {\n      element.innerText = val;\n      break;\n    }\n\n    case 'html': {\n      element.innerHTML = val;\n      break;\n    }\n\n    case 'href':\n    case 'src': {\n      element[type] = val;\n      break;\n    }\n\n    default: {\n      // match anything with style.*\n      const match = /style\\.([\\w-]+)/.exec(type);\n      if (match) {\n        element.style[match[1]] = val;\n      } else {\n        element.setAttribute(type, val);\n      }\n\n      break;\n    }\n  }\n}\n\nexport default dataBind;\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/dataBind.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "getObject",
    "memberof": "src/util/dataBind.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/dataBind.js~getObject",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/dataBind.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"path\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "getValue",
    "memberof": "src/util/dataBind.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/dataBind.js~getValue",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/dataBind.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "updateElement",
    "memberof": "src/util/dataBind.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/dataBind.js~updateElement",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/dataBind.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "val",
        "types": [
          "*"
        ]
      },
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "dataBind",
    "memberof": "src/util/dataBind.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/dataBind.js~dataBind",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/dataBind.js",
    "importStyle": "dataBind",
    "description": "",
    "examples": [
      "data-bind=\"html: text\" , applies html to a element from the property text.\ndata-bind=\"src: logo.Url\" , applies src to a element from the property logo.Url.\ndata-bind=\"href: logo.Url\" , applies href to a element from the property logo.Url.\ndata-bind=\"style.backgroundColor: bgcolor\" , applies style.backgroundColor to a element from the property bgcolor."
    ],
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isObservable",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"model\": *}"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/util/findElementByCSS.js",
    "content": "import getStyleRuleValue from './getStyleRuleValue';\n\nconst basicElementsToSearch = ['div', 'span', 'img', 'canvas', 'svg', 'circle', 'path'];\n\n/**\n *\n * @param {HTMLElement} element\n * @param {Array<string>} styles\n * @param {string} sheet\n * @param {object} obj\n * @return {{all: Array}}\n */\nexport default function findElementByCSS(\n  element,\n  styles = null,\n  customTypes = null,\n  sheet = null,\n  obj = {\n    all: [],\n  },\n) {\n  const elementsToSearch = basicElementsToSearch.concat(customTypes);\n\n  if (element && element.childNodes && element.childNodes.length > 0) {\n    const children = Array.from(element.querySelectorAll('*'));\n    children.forEach(child => {\n      if (\n        child.type === 'image/svg+xml' ||\n        elementsToSearch.indexOf(child.nodeName.toLowerCase()) !== -1\n      ) {\n        if (child.id || child.className) {\n          if (styles) {\n            styles = typeof styles === 'string' ? [styles] : styles;\n\n            styles.forEach(style => {\n              if (!obj[style]) {\n                obj[style] = [];\n              }\n\n              if (child.id && obj[style].indexOf(child) === -1) {\n                const val = getStyleRuleValue(`.${style}`, `#${child.id}`, sheet);\n                if (val) {\n                  obj[style].push(child);\n                }\n              }\n\n              const cssClasses =\n                typeof child.className === 'object'\n                  ? String(child.className.baseVal).split(' ')\n                  : String(child.className).split(' ');\n\n              cssClasses.forEach(cssClass => {\n                if (cssClass && obj[style].indexOf(child) === -1) {\n                  const val = getStyleRuleValue(`.${style}`, `.${cssClass}`, sheet);\n                  if (val && (`.${cssClass}` === val || cssClass === val)) {\n                    obj[style].push(child);\n                  }\n                }\n              });\n            });\n\n            obj.all.push(child);\n            findElementByCSS(child, styles, customTypes, sheet, obj);\n          } else {\n            obj.push(child);\n            findElementByCSS(child, null, null, null, obj);\n          }\n        }\n      }\n    });\n  }\n\n  return obj;\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/findElementByCSS.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "basicElementsToSearch",
    "memberof": "src/util/findElementByCSS.js",
    "static": true,
    "longname": "src/util/findElementByCSS.js~basicElementsToSearch",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/findElementByCSS.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "findElementByCSS",
    "memberof": "src/util/findElementByCSS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/findElementByCSS.js~findElementByCSS",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/findElementByCSS.js",
    "importStyle": "findElementByCSS",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "styles",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sheet",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{all: Array}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "src/util/findElementsByCSS.js",
    "content": "import findElementByCSS from './findElementByCSS';\n\nexport default function findElementsByCSS(element, styles, customTypes, sheet) {\n  let obj;\n  if (styles) {\n    obj = findElementByCSS(element, styles, customTypes, sheet);\n  } else {\n    obj = findElementByCSS(element);\n  }\n\n  return obj;\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/findElementsByCSS.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "findElementsByCSS",
    "memberof": "src/util/findElementsByCSS.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/findElementsByCSS.js~findElementsByCSS",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/findElementsByCSS.js",
    "importStyle": "findElementsByCSS",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      },
      {
        "name": "styles",
        "types": [
          "*"
        ]
      },
      {
        "name": "customTypes",
        "types": [
          "*"
        ]
      },
      {
        "name": "sheet",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "src/util/fitText.js",
    "content": "/**\n * @param {Array<HTMLElement>} copyElements\n *\n * @example\n *  const title = document.body.querySelector('.title');\n *  const ctaCopy = document.body.querySelector('.cta_copy');\n *  fitText([title, ctaCopy]);\n *\n */\n\nexport default function fitText(...copyElements) {\n  copyElements = copyElements.flat();\n\n  copyElements.forEach(copyElement => {\n    if (window.gsap) {\n      window.gsap.set(copyElement, { clearProps: 'fontSize, lineHeight' });\n    }\n\n    const { parentElement } = copyElement;\n    let fontSize = Number(\n      window\n        .getComputedStyle(parentElement, null)\n        .getPropertyValue('font-size')\n        .replace('px', ''),\n    );\n    let lineHeight =\n      Number(\n        window\n          .getComputedStyle(parentElement, null)\n          .getPropertyValue('line-height')\n          .replace('px', ''),\n      ) || fontSize + 1;\n    const targetWidth = Number(\n      window\n        .getComputedStyle(copyElement, null)\n        .getPropertyValue('width')\n        .replace('px', ''),\n    );\n    const parentWidth = Number(\n      window\n        .getComputedStyle(parentElement, null)\n        .getPropertyValue('width')\n        .replace('px', ''),\n    );\n    const targetHeight = Number(\n      window\n        .getComputedStyle(copyElement, null)\n        .getPropertyValue('height')\n        .replace('px', ''),\n    );\n    const parentHeight = Number(\n      window\n        .getComputedStyle(parentElement, null)\n        .getPropertyValue('height')\n        .replace('px', ''),\n    );\n\n    if (targetHeight > parentHeight || targetWidth > parentWidth) {\n      while (\n        Number(\n          window\n            .getComputedStyle(copyElement, null)\n            .getPropertyValue('height')\n            .replace('px', ''),\n        ) > parentHeight ||\n        Number(\n          window\n            .getComputedStyle(copyElement, null)\n            .getPropertyValue('width')\n            .replace('px', ''),\n        ) > parentWidth\n      ) {\n        if (fontSize < 1 || lineHeight < 1) {\n          return;\n        }\n        fontSize -= 0.2;\n        lineHeight -= 0.2;\n        copyElement.style.fontSize = `${fontSize}px`;\n        copyElement.style.lineHeight = `${lineHeight}px`;\n      }\n    }\n  });\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/fitText.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "fitText",
    "memberof": "src/util/fitText.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/fitText.js~fitText",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/fitText.js",
    "importStyle": "fitText",
    "description": "",
    "examples": [
      " const title = document.body.querySelector('.title');\n const ctaCopy = document.body.querySelector('.cta_copy');\n fitText([title, ctaCopy]);"
    ],
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<HTMLElement>"
        ],
        "spread": false,
        "optional": false,
        "name": "copyElements",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/util/getEnabler.js",
    "content": "let prom = null;\n\n/**\n * @return {Promise<unknown>}\n */\nexport default function getEnabler() {\n  if (window.Enabler) {\n    prom = Promise.resolve(window.Enabler);\n  }\n\n  if (!prom) {\n    prom = new Promise((resolve, reject) => {\n      const limit = 100;\n      let count = 0;\n\n      const checkLoop = function() {\n        if (count > limit) {\n          reject(new Error('Enabler not found'));\n        }\n        if (window.Enabler) {\n          resolve(window.Enabler);\n        } else {\n          count++;\n          setTimeout(checkLoop, 100);\n        }\n      };\n\n      checkLoop();\n    });\n  }\n\n  return prom;\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/getEnabler.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "prom",
    "memberof": "src/util/getEnabler.js",
    "static": true,
    "longname": "src/util/getEnabler.js~prom",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/getEnabler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "getEnabler",
    "memberof": "src/util/getEnabler.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/getEnabler.js~getEnabler",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/getEnabler.js",
    "importStyle": "getEnabler",
    "description": "",
    "lineNumber": 6,
    "return": {
      "nullable": null,
      "types": [
        "Promise<unknown>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "src/util/getFontSizeForText.js",
    "content": "let _canvas = null;\nfunction getCanvas() {\n  if (!_canvas) {\n    _canvas = document.createElement('canvas');\n  }\n  return _canvas;\n}\n\n/**\n * Returns the font size ideal for the indicated with.\n *\n * @param {string} text copy\n * @param {number} maxFontSizeInPixels Starting max font size\n * @param {string} fontFamily font family that the copy is using.\n * @param {number} width width that the text needs to fit in.\n */\nexport default function getFontSizeForText(text, maxFontSizeInPixels, fontFamily, width) {\n  const ctx = getCanvas().getContext('2d');\n\n  // if(!fontTest.test(font)){\n  //   throw new Error('font string not valid');\n  // }\n\n  let isValid = false;\n  while (!isValid) {\n    ctx.font = `${maxFontSizeInPixels}px ${fontFamily}`;\n    if (ctx.measureText(text).width < width) {\n      isValid = true;\n    } else {\n      // eslint-disable-next-line no-plusplus\n      maxFontSizeInPixels--;\n    }\n  }\n\n  return maxFontSizeInPixels;\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/getFontSizeForText.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "variable",
    "name": "_canvas",
    "memberof": "src/util/getFontSizeForText.js",
    "static": true,
    "longname": "src/util/getFontSizeForText.js~_canvas",
    "access": "private",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/getFontSizeForText.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "getCanvas",
    "memberof": "src/util/getFontSizeForText.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/getFontSizeForText.js~getCanvas",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/getFontSizeForText.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "getFontSizeForText",
    "memberof": "src/util/getFontSizeForText.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/getFontSizeForText.js~getFontSizeForText",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/getFontSizeForText.js",
    "importStyle": "getFontSizeForText",
    "description": "Returns the font size ideal for the indicated with.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "copy"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxFontSizeInPixels",
        "description": "Starting max font size"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fontFamily",
        "description": "font family that the copy is using."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "width that the text needs to fit in."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "src/util/getQueryVar.js",
    "content": "/**\n *\n * @param v\n * @return {string|boolean}\n */\nexport default function getQueryVar(v) {\n  const q = window.location.search.substring(1);\n  const vs = q.split('&');\n  for (let i = 0; i < vs.length; i++) {\n    const p = vs[i].split('=');\n    if (p[0] === v) {\n      return p[1];\n    }\n  }\n  return false;\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/getQueryVar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "getQueryVar",
    "memberof": "src/util/getQueryVar.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/getQueryVar.js~getQueryVar",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/getQueryVar.js",
    "importStyle": "getQueryVar",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 130,
    "kind": "file",
    "name": "src/util/inlineSvg.js",
    "content": "import loadText from './loadText';\n\n/**\n *\n * @param {HTMLElement} container\n * @return {Promise<void>}\n */\nfunction inlineSvg(container) {\n  let elements = Array.from(container.querySelectorAll('img[svg]'));\n  elements = [...elements, ...Array.from(container.querySelectorAll('img[inline]'))];\n\n  elements.forEach(img => {\n    if (!img.src) {\n      throw new Error('img element with missing src attribute.');\n    }\n  });\n\n  return Promise.all(elements.map(img => loadText(img.src))).then(svgList => {\n    svgList.forEach((svgText, index) => {\n      const el = elements[index];\n      const { id, className } = el;\n      const div = document.createElement('div');\n      const parent = el.parentNode;\n\n      parent.appendChild(div);\n      div.innerHTML = svgList[index];\n      div.firstChild.id = id;\n      div.firstChild.setAttribute('class', className);\n\n      parent.replaceChild(div.firstChild, el);\n      parent.removeChild(div);\n    });\n  });\n}\n\nexport default inlineSvg;\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/inlineSvg.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "inlineSvg",
    "memberof": "src/util/inlineSvg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/inlineSvg.js~inlineSvg",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/inlineSvg.js",
    "importStyle": "inlineSvg",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "container",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/util/isElementLoaded.js",
    "content": "import undefinedOrNull from './undefinedOrNull';\n\n/**\n * Wait for a DOM element to load.\n *\n * @param {string} selector\n * @param {number} time\n *\n * @example\n *  isElementLoaded('svg.logo').then((elm) => elm);\n *\n *  isElementLoaded('.containerHidden', 2000).then((elm) => elm);\n *\n * @returns {Promise<HTMLImageElement>}\n */\nexport default function isElementLoaded(selector, time = 500) {\n  if (undefinedOrNull(selector)) {\n    return null;\n  }\n\n  // eslint-disable-next-line compat/compat\n  return new Promise((resolve, reject) => {\n    if (typeof selector === 'undefined' || selector === null) {\n      return reject(null);\n    }\n\n    let _interval = setInterval(() => {\n      if (document.querySelector(selector) != null) {\n        clearInterval(_interval);\n        return resolve(document.querySelector(selector));\n      }\n    }, time);\n  });\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/isElementLoaded.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "isElementLoaded",
    "memberof": "src/util/isElementLoaded.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/isElementLoaded.js~isElementLoaded",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/isElementLoaded.js",
    "importStyle": "isElementLoaded",
    "description": "Wait for a DOM element to load.",
    "examples": [
      " isElementLoaded('svg.logo').then((elm) => elm);\n\n isElementLoaded('.containerHidden', 2000).then((elm) => elm);"
    ],
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<HTMLImageElement>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<HTMLImageElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "src/util/isValidURL.js",
    "content": "const pattern = new RegExp(\n  '^(https?:\\\\/\\\\/)?' +\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|' +\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' +\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' +\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' +\n    '(\\\\#[-a-z\\\\d_]*)?$',\n  'i',\n);\n\nexport default function isValidURL(str) {\n  return pattern.test(str);\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/isValidURL.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "pattern",
    "memberof": "src/util/isValidURL.js",
    "static": true,
    "longname": "src/util/isValidURL.js~pattern",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/isValidURL.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "isValidURL",
    "memberof": "src/util/isValidURL.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/isValidURL.js~isValidURL",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/isValidURL.js",
    "importStyle": "isValidURL",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/util/load.js",
    "content": "import loadScript from './loadScript';\nimport loadImage from './loadImage';\nimport loadText from './loadText';\n\nconst regJson = /\\.json$/;\n// const regText = /\\.(html|text|md|MD)$/;\nconst regJs = /\\.js$/;\nconst regBitmap = /\\.(png|gif|jpg|jpeg|svg)$/;\n\nexport default function load(url) {\n  switch (true) {\n    case regJson.test(url): {\n      return loadScript(url);\n    }\n\n    case regJs.test(url): {\n      return loadScript(url);\n    }\n\n    case regBitmap.test(url): {\n      return loadImage(url);\n    }\n\n    default: {\n      // case regText.test(url): {\n      return loadText(url);\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/load.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "regJson",
    "memberof": "src/util/load.js",
    "static": true,
    "longname": "src/util/load.js~regJson",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/load.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "regJs",
    "memberof": "src/util/load.js",
    "static": true,
    "longname": "src/util/load.js~regJs",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/load.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "regBitmap",
    "memberof": "src/util/load.js",
    "static": true,
    "longname": "src/util/load.js~regBitmap",
    "access": "public",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/load.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "load",
    "memberof": "src/util/load.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/load.js~load",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/load.js",
    "importStyle": "load",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "file",
    "name": "src/util/loadAll.js",
    "content": "import load from './load';\n\n/**\n * Loads multiple files and output an array with the objects\n * @param {Array<string>} urls\n * @param {boolean} sequential\n * @param {function} loader\n *\n * @example\n *  loadAll(['./my_example_image.png', './my_example_image2.png', './my_example_image3.png'], true);\n *\n *  loadAll(['./custom_image.png']);\n *\n * @return {Promise<Array>}\n */\nexport default function loadAll(urls, sequential = false, loader = load) {\n  if (sequential) {\n    return urls.reduce((prom, url) => prom.then(() => loader(url)), Promise.resolve(true));\n  }\n\n  return Promise.all(urls.map(url => loader(url)));\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/loadAll.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "loadAll",
    "memberof": "src/util/loadAll.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/loadAll.js~loadAll",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/loadAll.js",
    "importStyle": "loadAll",
    "description": "Loads multiple files and output an array with the objects",
    "examples": [
      " loadAll(['./my_example_image.png', './my_example_image2.png', './my_example_image3.png'], true);\n\n loadAll(['./custom_image.png']);"
    ],
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "urls",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "sequential",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "loader",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Array>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 144,
    "kind": "file",
    "name": "src/util/loadImage.js",
    "content": "/**\n * Loads an image and returns the image element\n *\n * @example\n *  loadImage('./my_example_image.png');\n *\n * @param {string} src\n * @return {Promise<HTMLImageElement>}\n */\nexport default function loadImage(src) {\n  return new Promise((resolve, reject) => {\n    const img = document.createElement('img');\n    img.onload = function() {\n      resolve(this);\n    };\n    img.onerror = reject;\n    img.dataset.src = src;\n    img.src = src;\n  });\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/loadImage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "function",
    "name": "loadImage",
    "memberof": "src/util/loadImage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/loadImage.js~loadImage",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/loadImage.js",
    "importStyle": "loadImage",
    "description": "Loads an image and returns the image element",
    "examples": [
      " loadImage('./my_example_image.png');"
    ],
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<HTMLImageElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "src/util/loadJSON.js",
    "content": "/**\n * Load a JSON file.\n * @param {String} url\n *\n * @example\n *  loadJSON('https://jsonplaceholder.typicode.com/todos/1');\n *\n * @return {Promise<any>}\n */\nexport default function loadJSON(url) {\n  return fetch(url).then(response => response.json());\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/loadJSON.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "loadJSON",
    "memberof": "src/util/loadJSON.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/loadJSON.js~loadJSON",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/loadJSON.js",
    "importStyle": "loadJSON",
    "description": "Load a JSON file.",
    "examples": [
      " loadJSON('https://jsonplaceholder.typicode.com/todos/1');"
    ],
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 148,
    "kind": "file",
    "name": "src/util/loadScript.js",
    "content": "/**\n * Load a JavaScript file.\n *\n * @param {String} url Script file url. A string array of url's also possible.\n * @param {Object} [opt] Callback function when file loaded.\n *\n * @example\n *  loadScript('https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js')\n *    .then((file) => console.log(file)\n *  );\n *\n * @retun {Promise}\n */\nexport default function loadScript(url, opts = {}) {\n  return new Promise((resolve, reject) => {\n    const head = document.head || document.querySelector('head');\n    const script = document.createElement('script');\n    script.type = opts.type || 'text/javascript';\n    script.charset = opts.charset || 'utf8';\n    script.async = true;\n    script.onload = function() {\n      this.onerror = this.onload = null;\n      resolve(script);\n    };\n\n    script.onerror = function() {\n      this.onerror = this.onload = null;\n      reject(new Error(`Failed to load ${this.src}`), script);\n    };\n\n    script.src = url;\n\n    head.appendChild(script);\n  });\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/loadScript.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 149,
    "kind": "function",
    "name": "loadScript",
    "memberof": "src/util/loadScript.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/loadScript.js~loadScript",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/loadScript.js",
    "importStyle": "loadScript",
    "description": "Load a JavaScript file.",
    "examples": [
      " loadScript('https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js')\n   .then((file) => console.log(file)\n );"
    ],
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@retun",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Script file url. A string array of url's also possible."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opt",
        "description": "Callback function when file loaded."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "src/util/loadScriptAll.js",
    "content": "import loadScript from './loadScript';\nimport loadAll from './loadAll';\n\n/**\n * Loads multiple files and output an array with the objects\n * @param {Array<string>} urls\n * @param {boolean} sequential\n *\n * @example\n *  loadScriptAll(['./mycustomScript.js', './mycustomScript2.js', './mycustomScript3.js'], true);\n *\n *  loadScriptAll(['./mycustomScript.png']);\n *\n * @return {Promise<Array>}\n */\nexport default function loadScriptAll(urls, sequential = false) {\n  return loadAll(urls, sequential, loadScript);\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/loadScriptAll.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "function",
    "name": "loadScriptAll",
    "memberof": "src/util/loadScriptAll.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/loadScriptAll.js~loadScriptAll",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/loadScriptAll.js",
    "importStyle": "loadScriptAll",
    "description": "Loads multiple files and output an array with the objects",
    "examples": [
      " loadScriptAll(['./mycustomScript.js', './mycustomScript2.js', './mycustomScript3.js'], true);\n\n loadScriptAll(['./mycustomScript.png']);"
    ],
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "urls",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "sequential",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Array>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 152,
    "kind": "file",
    "name": "src/util/loadText.js",
    "content": "/**\n * Load text from a source\n * @param {string} src\n *\n * @example\n *  loadText('./my_example_data.html');\n *\n * @return {Promise<string>}\n */\nexport default function loadText(src) {\n  return fetch(src).then(response => response.text());\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/loadText.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "loadText",
    "memberof": "src/util/loadText.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/loadText.js~loadText",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/loadText.js",
    "importStyle": "loadText",
    "description": "Load text from a source",
    "examples": [
      " loadText('./my_example_data.html');"
    ],
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 154,
    "kind": "file",
    "name": "src/util/makeObservable.js",
    "content": "import traverseObject from './traverseObject';\nimport EventDispatcher from '../event/EventDispatcher';\n\n/**\n *\n * @param obj\n * @returns {{observable: any, dispatcher: EventDispatcher}}\n */\nfunction makeObservable(obj) {\n  const observable = JSON.parse(JSON.stringify(obj));\n  const dispatcher = new EventDispatcher();\n\n  traverseObject(observable, (leafValue, leafName, source, traversedPath) => {\n    Object.defineProperty(source, leafName, {\n      value: leafName,\n      set: function(v) {\n        const oldValue = this[`@private__${leafName}`];\n        this[`@private__${leafName}`] = v;\n        dispatcher.dispatchEvent(traversedPath.join('.'), v, oldValue);\n      },\n      get: function() {\n        return this[`@private__${leafName}`];\n      },\n    });\n  });\n\n  return { observable, dispatcher };\n}\n\nexport default makeObservable;\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/makeObservable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "makeObservable",
    "memberof": "src/util/makeObservable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/makeObservable.js~makeObservable",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/makeObservable.js",
    "importStyle": "makeObservable",
    "description": "",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{observable: any, dispatcher: EventDispatcher}}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{observable: any, dispatcher: EventDispatcher}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "src/util/masker.js",
    "content": "import loadImage from './loadImage';\n\n/**\n * Will add canvas elements to the wrapper that are masked by the png images\n * @param {array} config\n *\n * @example\n *  masker([\n *      ['./bg.jpg', './bg_transparent_white_small.png'],\n *      ['./bg.jpg', './flame_mask_small.png'],\n *      ['./bg.jpg', './girl_mask_small.png']\n *   ], document.body.querySelectorAll('.wrapper'));\n *\n * @param {HTMLElement} wrapper\n * @return {Promise<unknown>}\n */\nexport default function masker(config, wrapper) {\n  return new Promise(function(resolve) {\n    const images = config\n      .reduce(function(acc, curr) {\n        acc.push(...curr);\n        return acc;\n      }, [])\n      .filter(function(value, index, self) {\n        return self.indexOf(value) === index;\n      });\n\n    Promise.all(images.map(loadImage))\n      .then(images =>\n        config.map(items => items.map(item => images.find(img => img.dataset.src === item))),\n      )\n      .then(mapped => {\n        mapped = mapped.map(([img, mask]) => {\n          const canvas = document.createElement('canvas');\n          let width = (canvas.width = img.width);\n          let height = (canvas.height = img.height);\n\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0);\n          ctx.globalCompositeOperation = 'destination-in';\n          ctx.drawImage(mask, 0, 0, width, height);\n\n          return canvas;\n        });\n\n        mapped.forEach(canvas => wrapper.appendChild(canvas));\n        return mapped;\n      })\n      .then(resolve);\n  });\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/masker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "function",
    "name": "masker",
    "memberof": "src/util/masker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/masker.js~masker",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/masker.js",
    "importStyle": "masker",
    "description": "Will add canvas elements to the wrapper that are masked by the png images",
    "examples": [
      " masker([\n     ['./bg.jpg', './bg_transparent_white_small.png'],\n     ['./bg.jpg', './flame_mask_small.png'],\n     ['./bg.jpg', './girl_mask_small.png']\n  ], document.body.querySelectorAll('.wrapper'));"
    ],
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "wrapper",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<unknown>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "src/util/politeLoadImages.js",
    "content": "import loadAll from './loadAll';\n\n/**\n * Will search for all child elements with a attribute data-src and will load it change it to .src,\n * @param {HTMLElement} element\n *\n * @example\n *  politeLoadImages(document.querySelector('svg'))\n *\n * @return {Promise<void>}\n */\nexport default async function politeLoadImages(element) {\n  const imageList = Array.from(element.querySelectorAll('img[data-src]'));\n  const imageUrlList = imageList.map(img => img.getAttribute('data-src'));\n  const result = await loadAll(imageUrlList);\n\n  result.forEach((img, index) => {\n    imageList[index].src = img.src;\n  });\n\n  while (result.length) {\n    result.pop();\n  }\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/politeLoadImages.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "politeLoadImages",
    "memberof": "src/util/politeLoadImages.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/util/politeLoadImages.js~politeLoadImages",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/politeLoadImages.js",
    "importStyle": "politeLoadImages",
    "description": "Will search for all child elements with a attribute data-src and will load it change it to .src,",
    "examples": [
      " politeLoadImages(document.querySelector('svg'))"
    ],
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 160,
    "kind": "file",
    "name": "src/util/rand.js",
    "content": "/**\n * Get random number\n * @param {number} min\n * @param {number} max\n *\n * @example\n *  rand(10, 420);\n *\n * @return {number}\n */\nexport default function rand(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/rand.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "rand",
    "memberof": "src/util/rand.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/rand.js~rand",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/rand.js",
    "importStyle": "rand",
    "description": "Get random number",
    "examples": [
      " rand(10, 420);"
    ],
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "src/util/rgbToHex.js",
    "content": "/**\n * Convert the RGB to hex code\n *\n * @param {number} r\n * @param {number} g\n * @param {number} b\n *\n * @example\n *  rgbToHex(0, 51, 255)\n *\n * @returns {string>}\n */\nexport default function rgbToHex(r, g, b) {\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/rgbToHex.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "rgbToHex",
    "memberof": "src/util/rgbToHex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/rgbToHex.js~rgbToHex",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/rgbToHex.js",
    "importStyle": "rgbToHex",
    "description": "Convert the RGB to hex code",
    "examples": [
      " rgbToHex(0, 51, 255)"
    ],
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "g",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 164,
    "kind": "file",
    "name": "src/util/stripHtml.js",
    "content": "/**\n * Strip any HTML elements in the string with the help of DOMParser\n *\n * @param {string} html\n *\n * @example\n *  stripHtml('<h1>Hey, <strong>nice banners</strong>!</h1>')\n *\n * @returns {string>}\n */\nexport default function stripHtml(html) {\n  return new DOMParser().parseFromString(html, 'text/html').body.textContent || '';\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/stripHtml.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "stripHtml",
    "memberof": "src/util/stripHtml.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/stripHtml.js~stripHtml",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/stripHtml.js",
    "importStyle": "stripHtml",
    "description": "Strip any HTML elements in the string with the help of DOMParser",
    "examples": [
      " stripHtml('<h1>Hey, <strong>nice banners</strong>!</h1>')"
    ],
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "src/util/traverseObject.js",
    "content": "/**\n * Will travel through a object and when it finds a leaf will call the function from the second argument\n *\n * @param {object} source\n * @param {function<leafValue: any, leafName: any, source: object, currPath: Array:string> => void} fn\n * @param {number} maxNesting\n * @param {Array<string>} path\n */\nfunction traverseObject(source, fn, maxNesting = 10, path = []) {\n  if (maxNesting < 0) {\n    return;\n  }\n\n  for (var propName in source) {\n    const traversedPath = [...path];\n    if (source.hasOwnProperty(propName)) {\n      traversedPath.push(propName);\n      if (typeof source[propName] === 'object') {\n        traverseObject(source[propName], fn, maxNesting - 1, traversedPath);\n      } else {\n        fn(source[propName], propName, source, traversedPath);\n      }\n    }\n  }\n}\n\nexport default traverseObject;\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/traverseObject.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "traverseObject",
    "memberof": "src/util/traverseObject.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/traverseObject.js~traverseObject",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/traverseObject.js",
    "importStyle": "traverseObject",
    "description": "Will travel through a object and when it finds a leaf will call the function from the second argument",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function<leafValue: any, leafName: any, source: object, currPath: Array:string> => void"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxNesting",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "src/util/undefinedOrNull.js",
    "content": "/**\n * Checks whether a given variable is undefined or null\n * @param obj\n * @returns {boolean}\n */\nexport default function undefinedOrNull(obj) {\n  return typeof obj === 'undefined' || obj === null;\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/undefinedOrNull.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "undefinedOrNull",
    "memberof": "src/util/undefinedOrNull.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/undefinedOrNull.js~undefinedOrNull",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/undefinedOrNull.js",
    "importStyle": "undefinedOrNull",
    "description": "Checks whether a given variable is undefined or null",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 170,
    "kind": "file",
    "name": "src/util/until.js",
    "content": "/**\n * Wait until N time\n * @param {number} time\n *\n * @example\n *  until(5000);\n *\n * @return {Promise}\n */\nexport default function until(time) {\n  return new Promise(resolve => setTimeout(resolve, time));\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/until.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "until",
    "memberof": "src/util/until.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/until.js~until",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/until.js",
    "importStyle": "until",
    "description": "Wait until N time",
    "examples": [
      " until(5000);"
    ],
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 172,
    "kind": "file",
    "name": "src/util/uuid.js",
    "content": "/**\n * Return id\n *\n * @example\n *  uuid();\n *\n * @return {string}\n */\nlet _uuid = new Date().getTime();\nexport default function uuid() {\n  return (_uuid++).toString(16);\n}\n",
    "static": true,
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/src/util/uuid.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 173,
    "kind": "variable",
    "name": "_uuid",
    "memberof": "src/util/uuid.js",
    "static": true,
    "longname": "src/util/uuid.js~_uuid",
    "access": "private",
    "export": false,
    "importPath": "@mediamonks/display-temple/src/util/uuid.js",
    "importStyle": null,
    "description": "Return id",
    "examples": [
      " uuid();"
    ],
    "lineNumber": 9,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 174,
    "kind": "function",
    "name": "uuid",
    "memberof": "src/util/uuid.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/uuid.js~uuid",
    "access": "public",
    "export": true,
    "importPath": "@mediamonks/display-temple/src/util/uuid.js",
    "importStyle": "uuid",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# Display Temple\n\n[![Travis](https://img.shields.io/travis/mediamonks/temple.svg?style=flat)](https://travis-ci.org/mediamonks/temple)\n[![npm](https://img.shields.io/npm/v/@mediamonks/temple.svg?style=flat)](https://www.npmjs.com/package/@mediamonks/temple)\n[![npm](https://img.shields.io/npm/dt/@mediamonks/temple.svg?style=flat)](https://www.npmjs.com/package/@mediamonks/temple)\n<!-- [![Code Climate](https://img.shields.io/codeclimate/github/mediamonks/seng-boilerplate.svg?maxAge=2592000)](https://codeclimate.com/github/mediamonks/seng-boilerplate) -->\n<!-- [![Coveralls](https://img.shields.io/coveralls/mediamonks/seng-boilerplate.svg?maxAge=2592000)](https://coveralls.io/github/mediamonks/seng-boilerplate?branch=master) -->\n\nThis is the Display.Monks Temple, used for creating display ads units for various vendors.\n\n## Getting Started\nSee documentation https://mediamonks.github.io/display-advertising-docs/index.html for documentation to getting started.\n\nOr\n\nView the [generated documentation](http://mediamonks.github.io/display-temple/).\n\n## Installation\n\n#### yarn\n```sh\nyarn add @mediamonks/display-temple\n```\n\n#### npm\n```sh\nnpm i -S @mediamonks/display-temple\n```\n\n\n\n## Building\n\nIn order to build seng-boilerplate, ensure that you have [Git](http://git-scm.com/downloads)\nand [Node.js](http://nodejs.org/) installed.\n\nClone a copy of the repo:\n```sh\ngit clone https://github.com/mediamonks/display-temple.git\n```\n\nChange to the seng-boilerplate directory:\n```sh\ncd seng-boilerplate\n```\n\nInstall dev dependencies:\n```sh\nyarn\n```\n\nUse one of the following main scripts:\n```sh\nnpm run build            # build this project\nnpm run dev              # run compilers in watch mode, both for babel and typescript\nnpm run test             # run the unit tests incl coverage\nnpm run test:dev         # run the unit tests in watch mode\nnpm run lint             # run eslint and tslint on this project\nnpm run doc              # generate typedoc documentation\n```\n\nWhen installing this module, it adds a pre-commit hook, that runs lint and prettier commands\nbefore committing, so you can be sure that everything checks out.\n\n\n## Contribute\n\nView [CONTRIBUTING.md](./CONTRIBUTING.md)\n\n\n## Changelog\n\nView [CHANGELOG.md](./CHANGELOG.md)\n\n\n## Authors\n\nView [AUTHORS.md](./AUTHORS.md)\n\n\n## LICENSE\n\n[MIT](./LICENSE) © MediaMonks\n\n\n## About this boilerplate\n\n**Remove this section when cloning this boilerplate to a real project!**\n\n### Folders\n\nThis boilerplate contains the following folders:\n* **/coverage** - Contains the generated test code coverage, is sent to Code\nClimate and Coveral.io.\n* **/docs** - Contains the generated documentation by typedoc.\n* **/lib** - Contains the built code from `src/lib`, will be published to npm.\n* **/node_modules** - Contains the node modules generated by running `yarn`.\n* **/src** - Contains the source code.\n* **/test** - Contains the tests.\n* **/vendor** - Can contain 3rd party code used in this project, when not\navailable on npm.\n\n### Files\n\nThis boilerplate contains the following files:\n* **.babelrc** - Contains babel configuration.\n* **.codeclimate.yml** - The Code Climate configuration for this project.\n* **.editorconfig** - Defines general formatting rules.\n* **.eslintignore** - Lists patterns that should be ignored when running eslint.\n* **.eslintrc.js** - Contains eslint configuration.\n* **.gitignore** - These files should not end up in git.\n* **.npmignore** - These files should not end up in npm.\n* **.nvmrc** - Contains nodejs version to build this project with.\n* **.nycrc** - Contains nyc code coverage configuration.\n* **.prettierignore** - Lists patterns that should be ignored when running prettier.\n* **.prettierrc** - Contains prettier formatting configuration.\n* **.travis.yml** - Configuration for Travis CI.\n* **AUTHORS.md** - Contains a list of all the authors that worked on this module.\n* **CONTRIBUTING.md** - Contains information on how to contribute on this project.\n* **index.d.ts** - The built Typescript definitions, referenced in the package.json.\nWill be published to npm.\n* **index.d.ts** - The built Typescript index, referenced in the package.json.\nWill be published to npm.\n* **LICENSE** - Our license file.\n* **package.json** - To list the npm package information, all the dependencies,\nand contains all the scripts that can be run.\n* **README.MD** - This file, remove the about section when cloning this boilerplate.\n* **tsconfig.build.json** - The TypeScript configuration file for building definitions.\n* **tsconfig.json** - The TypeScript configuration file for this project.\n* **tslint.json** - The linting rules for our TypeScript code.\n* **yarn.lock** - Yarn lockfile to freeze module versions.\n\n### Travis\n\nThis project uses [Travis](https://travis-ci.org) to build, test and\npublish its code to npm. Travis is free for public Github repositories.\n\nIt runs on all commits, shows the build status for pull requests, and\npublishes to npm when a new tag/release is created.\n\nTravis only runs the `npm test` script, so have configured that script\nto run everything we want Travis to check. Besides the unit tests, we\nalso run our validations and linters.\n\nThe travis configuration is placed in a `.travis.yml` file, consisting\nof multiple sections.\n\n1.  Defines the `node_js` [language](https://docs.travis-ci.com/user/languages/javascript-with-nodejs),\n    and tells travis on which node versions to run the process.\n2.  Before running, it needs to install some global dependencies, and\n    when it processes some coverage results.\n3.  It can do a [npm deploy](https://docs.travis-ci.com/user/deployment/npm),\n    telling it to keep the generated artifacts and only publish when run\n    on node 8 and when a tag was committed. It also contains the email\n    address and api key of the npm user.\n4.  Code Climate has a [travis plugin](https://docs.travis-ci.com/user/code-climate/)\n    that automatically uploads the code coverage results.\n\nBecause we want to keep the npm api key secret, we add the token to the Travis Repo settings\nwhere it will be stored secure:\nhttps://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings\n\nBefore we can do this, we must make sure that the repository is added\nto Travis, because Travis needs the repository owner/name info to make\nsure the encrypted values only work for that repository.\n\n1.  Then make sure you are logged in to your npm account with the\n    [adduser](https://docs.npmjs.com/cli/adduser) command:\n\n    ```sh\n    $ npm adduser\n    ```\n\n    To verify that you are logged in correctly you can check:\n\n    ```sh\n    $ npm whoami\n    ```\n\n3.  Now we need to [create a new token](https://docs.npmjs.com/getting-started/working_with_tokens):\n\n    ```sh\n    npm token create\n    ```\n\n    Copy the token value from the output to the Travis Environment Variable settings, and\n    add it with the name `NPM_TOKEN`.\n",
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@mediamonks/display-temple\",\n  \"version\": \"6.1.7\",\n  \"description\": \"This is the Display Advertising Temple, used for creating Display Advertising Units for various vendors.\",\n  \"scripts\": {\n    \"prepublishOnly\": \"npm-run-all -s validate build\",\n    \"validate\": \"npm-run-all -p lint test\",\n    \"build\": \"npm-run-all -s clean build:*\",\n    \"build:copy\": \"node copy-src-to-dist.js\",\n    \"build:npm\": \"node create-dist-package-json.js\",\n    \"test\": \"cross-env NODE_ENV=test nyc --all mocha \\\"./test/**/*.spec.js\\\"\",\n    \"test:dev\": \"mocha -w --watch-extensions ts,js \\\"./test/**/*.spec.js\\\"\",\n    \"clean\": \"npm-run-all clean:*\",\n    \"clean:test\": \"shx rm -rf coverage .nyc_output\",\n    \"clean:npm\": \"shx rm -rf lib tmp index.js\",\n    \"doc\": \"node_modules/.bin/esdoc\",\n    \"lint\": \"npm-run-all lint:*\",\n    \"lint:js\": \"eslint src --ext .js --cache\",\n    \"prettify\": \"prettier --write \\\"src/**/*.{js,json}\\\"\",\n    \"precommit\": \"lint-staged\"\n  },\n  \"lint-staged\": {\n    \"linters\": {\n      \"src/**/*.{js,json}\": [\n        \"prettier --write\",\n        \"git add\"\n      ]\n    }\n  },\n  \"pre-push\": [\n    \"validate\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/mediamonks/display-temple.git\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"author\": \"Mient-jan Stelling\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/mediamonks/display-temple/issues\"\n  },\n  \"homepage\": \"https://github.com/mediamonks/display-temple#readme\",\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.11.5\",\n    \"@babel/core\": \"^7.11.5\",\n    \"@babel/plugin-transform-runtime\": \"^7.11.5\",\n    \"@babel/preset-env\": \"^7.11.5\",\n    \"@babel/preset-stage-3\": \"^7.8.3\",\n    \"@babel/register\": \"^7.11.5\",\n    \"@types/chai\": \"^4.2.12\",\n    \"@types/mocha\": \"^2.2.44\",\n    \"@types/sinon\": \"^4.1.2\",\n    \"@types/sinon-chai\": \"^2.7.37\",\n    \"babel-eslint\": \"^8.0.3\",\n    \"babel-plugin-istanbul\": \"^4.1.5\",\n    \"babel-preset-next\": \"^1.4.0\",\n    \"chai\": \"^4.1.2\",\n    \"coveralls\": \"^2.11.6\",\n    \"cross-env\": \"^5.2.1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.13.1\",\n    \"eslint-config-airbnb-base\": \"^12.1.0\",\n    \"eslint-config-prettier\": \"^2.9.0\",\n    \"eslint-friendly-formatter\": \"^3.0.0\",\n    \"eslint-import-resolver-typescript\": \"^1.0.2\",\n    \"eslint-plugin-import\": \"^2.22.0\",\n    \"eslint-plugin-prettier\": \"^2.4.0\",\n    \"fs-extra\": \"^6.0.1\",\n    \"glob\": \"^7.1.6\",\n    \"husky\": \"^0.14.3\",\n    \"jsdom\": \"^11.5.1\",\n    \"jsdom-global\": \"^3.0.2\",\n    \"lint-staged\": \"^6.0.0\",\n    \"mocha\": \"^4.0.1\",\n    \"npm-run-all\": \"^4.1.5\",\n    \"nyc\": \"^11.3.0\",\n    \"prettier\": \"^1.19.1\",\n    \"shx\": \"^0.2.2\",\n    \"sinon\": \"^4.1.3\",\n    \"sinon-chai\": \"^2.14.0\",\n    \"esdoc-publish-html-plugin\": \"^1.1.2\"\n  },\n  \"peerDependencies\": {\n    \"gsap\": \"^3.1.0\"\n  },\n  \"dependencies\": {}\n}\n",
    "longname": "/Users/alandawidowicz/Documents/Github/display-temple/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]